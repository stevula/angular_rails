continue
quit
User.find_for_database_authentication(uid: user_params[:email])
User.find_for_database_authentication(uid: user_params[:username])
User.find_for_database_authentication(username: user_params[:username])
resource
quit
user_signed_in?
current_api_user
current_user
resource.signed_in?
continue
sign_in resource
resource.skip_confirmation!
sign_in resource
resource
sign_in("user", resource)
sign_in resource
quit
    sign_in_url = url_for(action: :after_create, controller: 'sessions', only_path: false, protocol: 'http')
    sign_in_url = url_for(action: 'users/after_sign_in', controller: 'sessions', only_path: false, protocol: 'http')
    sign_in_url = url_for(action: 'after_sign_in', controller: 'sessions', only_path: false, protocol: 'http')
    sign_in_url = url_for(action: :after_sign_in, controller: 'sessions', only_path: false, protocol: 'http')
quit
sign_in_url = url_for(action: :after_sign_in, controller: 'sessions', only_path: false, protocol: 'http')
sign_in_url = url_for(action: :create, controller: 'sessions', only_path: false, protocol: 'http')
sign_in_url = url_for(action: :sign_in, controller: 'sessions', only_path: false, protocol: 'http')
sign_in_url = url_for(action: :after_sign_in, controller: 'sessions', only_path: false, protocol: 'http')
    sign_in_url = url_for(action: :after_sign_in, controller: 'sessions', only_path: false, protocol: 'http')
quit
    sign_in_url = url_for(action: :after_sign_in, controller: 'sessions', only_path: false, protocol: 'http')
url_for(action: 'create', controller: 'sessions', only_path: false, protocol: 'http')
url_for(action: 'users/create', controller: 'sessions', only_path: false, protocol: 'http')
url_for(action: 'users/after_sign_in', controller: 'sessions', only_path: false, protocol: 'http')
quit
url_for(action: 'after_sign_in', controller: 'sessions', only_path: false, protocol: 'http')
quit
url_for(action: 'create', controller: 'sessions', only_path: false, protocol: 'http')
url_for(action: 'after_create', controller: 'sessions', only_path: false, protocol: 'http')
url_for(action: 'after_create', controller: 'api/sessions')
url_for(action: 'create', controller: 'sessions', only_path: false, protocol: 'http')
url_for(action: 'after_create', controller: 'api/sessions')
after_sign_in_path_for(resource)
quit
Api::SessionsController.new.public_methods
_.public_methods
Api::SessionsController.new
Api::SessionsController.new.after_create
Api::SessionsController.after_create
Api::SessionsController
after_sign_in_path_for(resource)
quit
after_sign_in_path_for(resource)
quit
resource
after_sign_in_path_for(resource)
quit
after_sign_in_path_for(resource)
quit
after_sign_in_path_for(resource)
quit
after_sign_in_path_for(resource)
quit
after_sign_in_path_for(resource)
sign_in(resource)
continue
sign_in resource
sign_in user
sign resource
resource.valid_password?(user_params[:password])
continue
sign_in resource
sign_in(user)
resource.valid_password?(params[:user][:password])
params[:password}
resource
user
sign_in(user)
p sign_in(user)
sign_in("user", user)
sign_in(user)
quit
user_params
user.valid_password?(user_params[:password])
user.valid_password(user_params[:password])
user_params[:password]
user
quit
a.valid_password?(user_params[:password])
a.valid_password(user_params[:password])
a.valid_password?
a.class
a
Devise::DatabaseAuthenticatable
Devise
include DatabaseAuthenticatable
DatabaseAuthenticatable
user.valid_password?(user_params[:password])
User.find_for_database_authentication(email: user_params[:email])
User.find_for_database_authentication
a.password
a.authenticate!
a
a[0]
a = User.find_by(email: user_params[:email])
a = _
User.find_by(email: user_params[:email])
a = _
User.find_by(email: user_params[:email])
User.find_by(user_params[:email])
user_params
User.find_by(user_params)
quit
user.errors
user.valid?
user
quit
user
a
quit
next
quit
params
user_params
quit
user_session
user_signed_in?
current_user
quit
current_user
